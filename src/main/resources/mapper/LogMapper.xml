<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coder.lesson.mapper.LogMapper">
    <resultMap id="BaseResultMap" type="com.coder.lesson.entity.Log">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="operation" jdbcType="VARCHAR" property="operation"/>
        <result column="time" jdbcType="INTEGER" property="time"/>
        <result column="method" jdbcType="VARCHAR" property="method"/>
        <result column="params" jdbcType="VARCHAR" property="params"/>
        <result column="ip" jdbcType="VARCHAR" property="ip"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, username, `operation`, `time`, `method`, params, ip, create_time
  </sql>
    <select id="selectAll" parameterType="com.coder.lesson.vo.req.LogPageReqVO" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_log
        <where>
            <if test="operation!=null and operation!=''">
                and operation like concat('%',#{operation},'%')
            </if>
            <if test="userId!=null and userId!=''">
                and user_id = #{userId}
            </if>
            <if test="username!=null and username!=''">
                and username like concat('%',#{username},'%')
            </if>
            <if test="startTime!=null and startTime!=''">
                <if test="endTime!=null and endTime!=''">
                    and create_time between #{startTime} and #{endTime}
                </if>
            </if>
        </where>
        order by create_time desc
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_log
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_log
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByIds">
        delete from sys_log
        where id in
        <foreach collection="ids" separator="," open="(" close=")" item="item">
            #{item}
        </foreach>
    </delete>
    <insert id="insert" parameterType="com.coder.lesson.entity.Log">
    insert into sys_log (id, user_id, username, 
      `operation`, `time`, `method`, 
      params, ip, create_time
      )
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{operation,jdbcType=VARCHAR}, #{time,jdbcType=INTEGER}, #{method,jdbcType=VARCHAR}, 
      #{params,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.coder.lesson.entity.Log">
        insert into sys_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="operation != null">
                `operation`,
            </if>
            <if test="time != null">
                `time`,
            </if>
            <if test="method != null">
                `method`,
            </if>
            <if test="params != null">
                params,
            </if>
            <if test="ip != null">
                ip,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="operation != null">
                #{operation,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                #{time,jdbcType=INTEGER},
            </if>
            <if test="method != null">
                #{method,jdbcType=VARCHAR},
            </if>
            <if test="params != null">
                #{params,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.coder.lesson.entity.Log">
        update sys_log
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="operation != null">
                `operation` = #{operation,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                `time` = #{time,jdbcType=INTEGER},
            </if>
            <if test="method != null">
                `method` = #{method,jdbcType=VARCHAR},
            </if>
            <if test="params != null">
                params = #{params,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                ip = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.coder.lesson.entity.Log">
    update sys_log
    set user_id = #{userId,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      `operation` = #{operation,jdbcType=VARCHAR},
      `time` = #{time,jdbcType=INTEGER},
      `method` = #{method,jdbcType=VARCHAR},
      params = #{params,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>